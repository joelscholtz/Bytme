@inject SignInManager<UserModel> SignInManager
@using bytme.Models;
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<style>
    a {
        color: black;
    }

    a:hover {
        color:black;
    }
</style>
<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-page="./Index" style="color:black;">Profile</a></li>
    <li class="@ManageNavPages.AddressNavClass(ViewContext)"><a asp-page="./Address">Address</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a id="change-password" asp-page="./ChangePassword">Password</a></li>
    @*@if (hasExternalLogins)
        {
            <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a id="external-login" asp-page="./ExternalLogins">External logins</a></li>
        }*@
    @*<li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>*@
    <li class="@ManageNavPages.OrderHistoryNavClass(ViewContext)"><a asp-controller="ShoppingCart" asp-action="OrderHistory">Order history</a></li>
    <li class="@ManageNavPages.PersonalDataNavClass(ViewContext)"><a asp-page="./PersonalData">Personal data</a></li>
</ul>
